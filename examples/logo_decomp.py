import numpy as np
import matplotlib.pyplot as plt

import pydecomp as pdc

# path --> np.ndarray(n_pathpts,2)
# obsacles --> np.ndarray(n_cloudpts,2)

# ------------------- Create a path per letter in pydecomp ------------------ #
path1 = np.array([[0, 0], [0, 1], [1, 0.5], [0.1, 0.5]])
path2 = np.array([[0, 1], [0.25, 0.5], [0.75, 0.5], [1, 1], [0.8, 0]])
path3 = np.array([[0, 0], [0, 1], [1, 0.75], [1, 0.25], [0.1, 0]])
path4 = np.array([[0.75, 1], [0, 0.75], [0.25, 0.5], [0, 0.25], [0.75, 0]])
path5 = np.array([[0.75, 1], [0.1, 0.85], [0, 0.15], [0.75, 0]])
path6 = np.array([[0.9, 0.9], [0.1, 0.75], [0.1, 0], [0.75, 0], [0.9, 0.7]])
path7 = np.array([[0.1, 0], [0.3, 0.9], [0.8, 0.6], [1, 0.8], [1.2, 0]])
path8 = np.array([[0, 0], [0, 1], [1, 0.5], [0.1, 0.5]])


path2 += np.array([1.15, 0])
path3 += np.array([2.55, 0])
path4 += np.array([4, 0])
path5 += np.array([5.2, 0])
path6 += np.array([6.2, 0])
path7 += np.array([7.4, 0])
path8 += np.array([9.1, 0])

box = np.array([[2, 2]])

# ------------------- Create a cloud of points per letter in pydecomp ------------------ #
obstacle1 = np.array(
    [
        [-0.05, -0.1],
        [0.05, -0.1],
        [1.1, 0.4],
        [1.1, 0.5],
        [0.3, 0.3],
        [0.33, 1],
        [0.23, 0.67],
        [0.56, 0.57],
        [0.06, 1.25],
        [-0.1, 1.1],
        [-0.2, 0.5],
        [1, 0.6],
    ]
)
obstacle2 = np.array(
    [
        [1.1, 0.7],
        [1.19, 1.42],
        [2.15, 1.28],
        [1.24, 0.3],
        [1.95, -0.44],
        [1.8, 0.9],
        [2.2, 0.4],
        [1.75, 0.2],
        [2.33, 0.75],
        [1.44, 0.62],
        [1.4, 0.1],
        [1.6, 0.7],
    ]
)
obstacle3 = np.array(
    [
        [2.4, 0],
        [2.4, 1.05],
        [3.66, -0.5],
        [3.58, 0.8],
        [2.7, 0.8],
        [2.71, 0.24],
        [3.4, 0.6],
        [3.4, 0.24],
        [2.99, 0.0],
        [2.99, 1],
        [3.7, 0.285],
        [2.4, 0.5],
        [3.7, 0.45],
        [2.6, -0.1],
        [2.64, 1.1],
        [2.45, -0.15],
        [3.7, 0.71],
        [2.4, -0.08],
        [3.57, 0.12],
        [2.5, 1.12],
        [3.41, 0.91],
        [2.36, 0.88],
        [3.5, 0.84],
        [3.4, 0.46],
    ]
)

obstacle4 = np.array(
    [
        [3.8, 0.2],
        [3.8, 0.8],
        [4.25, -0.025],
        [4.25, 1.025],
        [4.7, -0.1],
        [4.7, 1.1],
        [3.98, 0.5],
        # [4.39, 0.5],
        [4.26, 0.7],
        [4.26, 0.25],
        [4.81, 0.8],
        [4.77, 0.12],
        [3.96, 0.92],
        [3.96, 0.075],
        [3.82, 0.32],
        [3.8, 0.67],
        # [4.34, 0.35],
        [4.365, 0.43],
        [4.3, 0.6],
    ]
)

obstacle5 = np.array(
    [
        [5.2, 0],
        [5.2, 1],
        [6, -0.13],
        [6, 1.2],
        # [5.93, 0.73],
        [5.45, 0.7],
        [5.43, 0.25],
        [5.93, 0.22],
        [5, 0.5],
        [5.56, -0.11],
        [5.59, 1.1],
        [6.09, 1.05],
        [6.1, 0.01],
        [5, 0.19],
        [5.43, 0.45],
        [5.7, 0.73],
    ]
)
obstacle6 = np.array(
    [
        [6.3, -0.2],
        [6.2, 1],
        [7.2, -0.2],
        [7.5, 1],
        [6.6, -0.2],
        [6.01, 0.5],
        [7.37, 0.4],
        [6.75, 1.12],
        [6.43, 0.55],
        [6.43, 0.2],
        [6.9, 0.68],
        [6.9, 0.2],
        [7.19, 1.09],
        [6.9, -0.24],
        [6, -0.04],
        [5.99, 0.74],
    ]
)
obstacle7 = np.array(
    [
        # [7.2, -0.1],
        [8.8, -0.2],
        [7.54, 0.92],
        [8.5, 1],
        [8.1, 0.77],
        [8.2, 0.5],
        [0.74, 0.61],
        [8.33, 0.62],
        [7.74, 0.7],
        [7.91, 0.54],
        [8.25, 0.55],
        [8.05, 0.49],
        [7.439, -0.17],
        [7.6, 1.04],
        [7.4, 0.51],
        [7.71, 1.06],
        [8.32, 0.92],
        [8.57, 0.9],
        [8.67, 0.42],
        [8.43, 0.29],
        [8.6, -0.23],
        [8.21, 0.79],
        [8.39, 0.98],
    ]
)
obstacle8 = obstacle1 + np.array([9.1, 0])


# ---------------------- Visualize and save each letter ---------------------- #
paths = [path1, path2, path3, path4, path5, path6, path7, path8]
obstacles = [
    obstacle1,
    obstacle2,
    obstacle3,
    obstacle4,
    obstacle5,
    obstacle6,
    obstacle7,
    obstacle8,
]
letters = ["p", "y", "d", "e", "c", "o", "m", "p"]

for path, obstacle, letter in zip(paths, obstacles, letters):
    A, b = pdc.convex_decomposition_2D(obstacle, path, box)
    ax = pdc.visualize_environment(Al=A, bl=b, p=path, planar=True, ax_view=False)
    ax.plot(path[:, 0], path[:, 1], "k-o")
    ax.plot(obstacle[:, 0], obstacle[:, 1], "ro")
    # fig = ax.get_figure()
    # fig.savefig(pdc.pydecomp_path() + "/docs/logo/" + letter + ".pdf", dpi=1800)
    # plt.clf()
    plt.show()
